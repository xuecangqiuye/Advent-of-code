import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

public class Day6 {

    public static void main(String[] args) {
        String input = ".........................................#...............................#..........#.......................#.....................\n" +
                "................#.........................................#.................................#..........#...#......................\n" +
                "......................#...#............#..................#......................#.##........#............#.......................\n" +
                "...........................#...............................##.................#..............#............#.......................\n" +
                "..........#....#...............#.........#.................................#.......#.....................#..........#..........#..\n" +
                "..........................................#..............#...............................#.......................#................\n" +
                ".................#..#..........#.#..................#................................#.......#.#........#....#....#...............\n" +
                ".......#............#....................................#..#.....##...............................#........##...........#........\n" +
                "......#..................................................#.....#..................#......................................#........\n" +
                "....................................................................................................#...#.......#.............#...\n" +
                ".....#...................................................#...........#...##........##.................................#...........\n" +
                "........................#..........................#...............#.......#............#..#..........##..............#...........\n" +
                ".....................#...................................#.........................#..............#......#..................#.....\n" +
                ".........#.#....#.....#...................................#....................................#..................................\n" +
                ".........#.#......#.........................#............................................#...#...................................#\n" +
                ".........................................#.#...............................#..............#..............................#........\n" +
                "#...........#...................#.....#..................#.........#...#...................#.............................##.....#.\n" +
                "#....#..........#............#................................#...#............##.....#....................#......................\n" +
                "#.................................##...#........#..............#.......#..........#....................................#.........#\n" +
                "..............#...#...............................................#................#........#...#.................#......#........\n" +
                "..............#.....................#.....#...........#............#...#.......##.........................##.#....................\n" +
                "....#............................................##...................#.......................................#........#..........\n" +
                ".................................................................................#...#............................................\n" +
                "....................................#...................#.........#......#.....#...#.............................#..............#.\n" +
                ".....#................................#................................#........................................................#.\n" +
                ".............................................#..........##........#.........#..........................#..........................\n" +
                "...............#..#...........#.......#........................#.........#.....................................................##.\n" +
                "...#....................#.........................#..#............................#...........#..#...#...............#............\n" +
                "........#.....................................#.......................................................#...#..#.........#.#......#.\n" +
                "...........................................#...............#............................................................#.....#...\n" +
                ".........................................#.....#............##......................#..............................#..............\n" +
                "..#...............#.............................#............................#.........#.......#..................................\n" +
                "..............................................................................................................#.............#....#\n" +
                "..................#.#.............#......................................#.......#...............#..........#.....................\n" +
                "........................#.#.......#..........#...#......#.........#......#.................#........#.......#............#....#.#.\n" +
                "..#.....................................................................#......................#...............#..................\n" +
                "..................................................................#......#............................#........#........#.........\n" +
                "......................................#.....................#..................#..............#...................................\n" +
                "................#..#.....................................................#....................................#..........#........\n" +
                "...................................#........................................#.#..#............................................##..\n" +
                "...............................#.........................#..........................#............................#.........#......\n" +
                "............................#........#..............#.............#.#........................................................#....\n" +
                "................#..................#.....#......................#.....................................................#...........\n" +
                "......................#........#............#..................#...............#...............#..................................\n" +
                "......................................................#..................................................#........................\n" +
                "................#.......#..................................................................#......................................\n" +
                "....................................#....#...............#........................................................................\n" +
                ".................................................................................................#...#.#..........................\n" +
                ".......#..#...........#.....#...............................................................................#..............#......\n" +
                "...#.................#.................^...................#.....#................................................................\n" +
                "...............#.............................................................................#.................................#..\n" +
                "............................................#.....#............................................................#.#........##......\n" +
                "................................#................................#.......#..#......#...................#......#..............#....\n" +
                "...................##...........................................................#.................................................\n" +
                "...........................#...................#..........#...................................#............#.............#...#....\n" +
                ".....#........................#...............#..#.#.......#...................................#.##...............#...#...........\n" +
                "...#.....................#.#.......................#..........#.............................................................#.....\n" +
                ".......#.........................................#.........#.............#....................##...........................#......\n" +
                ".......................................##...........#.................#.......................................#..................#\n" +
                "................................#.......#..........................#........#.#........#..........#...........#....##.............\n" +
                ".......#............#....#....................................#.....#...............#.............................................\n" +
                "..........#.................#............................................................................#.............#....#...#.\n" +
                "...#.......................#.................................................................................................#....\n" +
                ".......................#....#..........................................................................................#..........\n" +
                "......................................................................#...............................#............#....#.........\n" +
                ".....#..............................................................................#............#...........................#....\n" +
                "..#.............#..#.............#...#............................................................................................\n" +
                "....................................................#.......#.............................#....#............#...................#.\n" +
                "....................................................................#.#...#....................................#..........#.......\n" +
                "......#...#................#.........#.................##......................#........................#.........................\n" +
                ".............#.#...........#..........................................................................#...........................\n" +
                "..........#.....#........#........................................................................#.#.................#...........\n" +
                "..........#.##....................................#......#................#..........#..........#.......##.....#..................\n" +
                ".............................#................................................................##.............#....................\n" +
                "....................................#.................................................................................###.........\n" +
                "..................................#..........#...................................#......#.........................................\n" +
                "...............#...........#.............................................#......#...................................#.............\n" +
                "...............#...#...................................................#...................#............#...................#.....\n" +
                "........................................#......#.............#........#..........................#....#.....#..................#..\n" +
                ".......................#......................................................................#.......#...................#.....##\n" +
                ".................#.....................#............#............................#..........#......................#..............\n" +
                "....................#................................................................#................#......#.#..................\n" +
                ".#............#...............................................#..#......##.#................................##....#...............\n" +
                ".#.......#..........................................................................................................#.............\n" +
                ".................#............#...............................................................................#...................\n" +
                ".................................##......................................#.........................#................#.............\n" +
                "...................#.............................................................#................................................\n" +
                "...#.....#..#......#........#....#.................#..................#..#......................................#...........#...#.\n" +
                ".#.....................#...........................................................................#............................#.\n" +
                ".#............................#.........#...............................................#.........................................\n" +
                "....#......................#......................#....#........#.....#...................................#......................#\n" +
                ".......#.................#..............................#.....#......................#...............#..............#.......#.....\n" +
                "...#.................................................................................................#........#.....#......#......\n" +
                "......##...................................................................................#................................#.....\n" +
                "..........#................................#..................................#.................................................#.\n" +
                "...........#........#..............#...#..............#...................................................#......#.........#......\n" +
                ".......#...#....................................#..##.........................................................#...................\n" +
                "...........#............................................##..........#..#.#.....................................................#..\n" +
                "...................................#............................#..............#..#..................................#............\n" +
                "....#.......#...............#...........................................................................#.........................\n" +
                "...............#.....................................................................................................#............\n" +
                "................#..........................................#...............##...........................#....#..........#.........\n" +
                "...........................................#...................................................................................#..\n" +
                ".................#..........................................................................#.....#.............##..........#.....\n" +
                "...............#..................#................................#.......................#...#.....##...........................\n" +
                ".............#.......................#.......#.............#.#...#......#..............#.............................#.#..........\n" +
                "..........##....#..#..............................#...............................................................................\n" +
                ".................#......#.......#.....#..........#.............................#......................#.....#.....................\n" +
                "....#........#....................#.#.........#.#..........#......................................................................\n" +
                "...........................#.......#........#.........................#.#.................#........#...............#......#.......\n" +
                "#..#..................#...........#.....................................................................................#.........\n" +
                "......#...#.#...........#.....................................................#................#..#............#..................\n" +
                "................##.#...#..............#..............................#............................................................\n" +
                "...........................................................................................#.............................#........\n" +
                ".......#....#...................#..........................................................#............#............#.....#......\n" +
                ".............#....#..................................#....#........#.....................................#.#....#..............#.#\n" +
                ".#..................................................#...................#...............#.........................................\n" +
                "...#........#..................................#............#.#.......................................#...........................\n" +
                "................#.....#....................................#.#.#...........#......##................#.................#......#....\n" +
                "...#.......................#...........#...#...........#.#........................#..#.................##.....#...................\n" +
                ".............#.......................................#................#....#..#..#.....................#...#............#.........\n" +
                "..........#..................#............#...#..................#................................................................\n" +
                ".........#..........#.....................#..#................#.......................#.........#.......##..#.#....#.....#....#...\n" +
                "#..........................#.#...........#.#.........#............................................................................\n" +
                "..................#.....................#......#.##...................#................................................#..#.......\n" +
                ".....#....#......#..#............................##.........................................................#.....#.......#...##..\n" +
                "....#...#.#...##..................#..........................................................#.....#..............................\n" +
                "..............................#............#...........#..................................#....#............#.......#.............\n" +
                "....................................#.....................#............................#..............#...........................\n" +
                "............#............#..........#....##....................................#..#.....#..................#......................";

        String input1 = "....#.....\n" +
                ".........#\n" +
                "..........\n" +
                "..#.......\n" +
                ".......#..\n" +
                "..........\n" +
                ".#..^.....\n" +
                "........#.\n" +
                "#.........\n" +
                "......#...";

        String[] split = input.split("\\n");
        char[][] map = new char[split.length][split[0].length()];
        Character[][] map1 = new Character[split.length][split[0].length()];

        for (int i = 0; i < split.length; i++) {
            for (int j = 0; j < split[i].toCharArray().length; j++) {
                map[i][j] = split[i].charAt(j);
                map1[i][j] = split[i].charAt(j);
            }
        }
        int step = solutionForPartOne(map);
        System.out.println(step);

//        int answer2 = solutionForPartTwo(map1);
//        System.out.println(answer2);
    }

    static char GUARD = '^';
    static char WALL = '#';
    static int[][] DIR = new int[][]{
            {0, -1},
            {1, 0},
            {0, 1},
            {-1, 0}
    };
    static int LENGTH_X = 0;
    static int LENGTH_Y = 0;
    static char MARK = 'X';

    public static int solutionForPartOne(char[][] map) {
        int res = 0;
        int x = 0;
        int y = 0;
        LENGTH_Y = map.length;
        LENGTH_X = map[0].length;
        for (int i = 0; i < map.length; i++) {
            for (int j = 0; j < map[i].length; j++) {
                if (Objects.equals(map[i][j], GUARD)) {
                    x = j;
                    y = i;
                }
            }
        }
        map[y][x] = MARK;
        dfs(map, x, y, 0);

        for (char[] chars : map) {
            for (char a : chars) {
                if (Objects.equals(a, MARK)) {
                    res++;
                }
            }
        }
        return res;
    }

    public static void dfs(char[][] map, int x, int y, int dir) {
        int[] dirArr = DIR[dir];
        int nextX = x + dirArr[0];
        int nextY = y + dirArr[1];


        if (nextY >= LENGTH_Y || nextY < 0 || nextX >= LENGTH_X || nextX < 0) {
            return;
        }
        if (Objects.equals(map[nextY][nextX], WALL)) {
            dir = (dir + 1) > 3 ? 0 : dir + 1;
            dfs(map, x, y, dir);
        } else {
            map[nextY][nextX] = MARK;
            dfs(map, nextX, nextY, dir);
        }
    }


    static int RES2 = 0;
    static char FAKE_WALL = '@';

    public static int solutionForPartTwo(Character[][] map) {
        int x = 0;
        int y = 0;
        for (int i = 0; i < map.length; i++) {
            for (int j = 0; j < map[i].length; j++) {
                if (Objects.equals(map[i][j], GUARD)) {
                    x = j;
                    y = i;
                }
            }
        }
        map[y][x] = MARK;
        List<List<List<Integer>>> dirMap = new ArrayList<>(LENGTH_Y);
        for (int i = 0; i < LENGTH_Y; i++) {
            List<List<Integer>> innerList = new ArrayList<>(LENGTH_X);
            for (int j = 0; j < LENGTH_X; j++) {
                innerList.add(new ArrayList<>());
            }
            dirMap.add(innerList);
        }

        List<List<List<Integer>>> aMap = new ArrayList<>(LENGTH_Y);
        for (int i = 0; i < LENGTH_Y; i++) {
            List<List<Integer>> innerList = new ArrayList<>(LENGTH_X);
            for (int j = 0; j < LENGTH_X; j++) {
                innerList.add(new ArrayList<>());
            }
            aMap.add(innerList);
        }

        dfs2(map, dirMap, aMap, x, y, 0);
//        doWhile(map, x, y, 0);
        return RES2;
    }

    static Character[][] copyArr;
    public static void dfs2(Character[][] map, List<List<List<Integer>>> dirMap, List<List<List<Integer>>> aMap, int x, int y, int dir) {
        int[] dirArr = DIR[dir];
        int nextX = x + dirArr[0];
        int nextY = y + dirArr[1];
        dirMap.get(y).get(x).add(dir);
        int nextDir = (dir + 1) > 3 ? 0 : dir + 1;

        if (nextY >= LENGTH_Y || nextY < 0 || nextX >= LENGTH_X || nextX < 0) {
            return;
        }

        if (Objects.equals(map[nextY][nextX], WALL)) {
            dfs2(map, dirMap, aMap, x, y, nextDir);
        } else {
            copyArr = Day16.deepCopyArray(map);
            copyArr[nextY][nextX] = FAKE_WALL;
            dfsLoop(copyArr, dirMap, aMap, x, y, nextDir);

            map[nextY][nextX] = MARK;
            dfs2(map, dirMap, aMap, nextX, nextY, dir);
        }
    }

    public static void dfsLoop(Character[][] map, List<List<List<Integer>>> dirMap, List<List<List<Integer>>> aMap, int x, int y, int dir) {
        int[] dirArr = DIR[dir];
        int nextX = x + dirArr[0];
        int nextY = y + dirArr[1];
        int nextDir = (dir + 1) > 3 ? 0 : dir + 1;
        if (aMap.get(y).get(x).contains(dir) && map[y][x] == 'A') {
            return;
        }

        if (nextY >= LENGTH_Y || nextY < 0 || nextX >= LENGTH_X || nextX < 0) {
            return;
        }

        if (Objects.equals(map[nextY][nextX], WALL) || Objects.equals(map[nextY][nextX], FAKE_WALL)) {
            dfsLoop(map, dirMap, aMap, x, y, nextDir);
        } else {
            if ((Objects.equals(map[nextY][nextX], MARK) && dirMap.get(nextY).get(nextX).contains(dir)) || (Objects.equals(map[nextY][nextX], 'A') && aMap.get(nextY).get(nextX).contains(dir)))
            {
                RES2++;
                System.out.println(RES2);
                return;
            }
            map[nextY][nextX] = 'A';
            aMap.get(y).get(x).add(dir);
            dfsLoop(map, dirMap, aMap, nextX, nextY, dir);
        }
    }

    public static void doWhile(char[][] map, int x, int y, int dir) {

        int[] dirArr;
        int nextX;
        int nextY;
        int nextDir;

        List<List<List<Integer>>> dirMap = new ArrayList<>(LENGTH_Y);
        for (int i = 0; i < LENGTH_Y; i++) {
            List<List<Integer>> innerList = new ArrayList<>(LENGTH_X);
            for (int j = 0; j < LENGTH_X; j++) {
                innerList.add(new ArrayList<>());
            }
            dirMap.add(innerList);
        }

        List<List<List<Integer>>> aMap = new ArrayList<>(LENGTH_Y);
        for (int i = 0; i < LENGTH_Y; i++) {
            List<List<Integer>> innerList = new ArrayList<>(LENGTH_X);
            for (int j = 0; j < LENGTH_X; j++) {
                innerList.add(new ArrayList<>());
            }
            aMap.add(innerList);
        }

        while (true) {
            dirMap.get(y).get(x).add(dir);
            dirArr = DIR[dir];
            nextX = x + dirArr[0];
            nextY = y + dirArr[1];
            nextDir = (dir + 1) > 3 ? 0 : dir + 1;

            if (nextY >= LENGTH_Y || nextY < 0 || nextX >= LENGTH_X || nextX < 0) {
                break;
            }

            if (Objects.equals(map[nextY][nextX], WALL)) {
                dir = nextDir;
            } else {
                map[nextY][nextX] = FAKE_WALL;
                int obsDir = nextDir;
                int obsX = x;
                int obsY = y;
                while (true) {
                    int[] obsDirArr = DIR[obsDir];
                    int obsNextX = obsX + obsDirArr[0];
                    int obsNextY = obsY + obsDirArr[1];
                    int obsNextDir = (obsDir + 1) > 3 ? 0 : obsDir + 1;

                    if (obsNextY >= LENGTH_Y || obsNextY < 0 || obsNextX >= LENGTH_X || obsNextX < 0) {
                        break;
                    }

                    if (Objects.equals(map[obsNextY][obsNextX], WALL) || Objects.equals(map[obsNextY][obsNextX], FAKE_WALL)) {
                        obsDir = obsNextDir;
                    } else {
                        if (Objects.equals(map[obsNextY][obsNextX], MARK) && dirMap.get(obsNextY).get(obsNextX).contains(obsDir)) {
                            RES2++;
                            System.out.println(RES2);
                            break;
                        }
                        if (map[obsNextY][obsNextX] != MARK) {
                            map[obsNextY][obsNextX] = 'A';
                        }
                        obsX = obsNextX;
                        obsY = obsNextY;
                    }
                }
                map[nextY][nextX] = MARK;
                x = nextX;
                y = nextY;
            }
        }
    }
}

